{"version":3,"sources":["chat.test.js"],"names":["app","require","request","truncate","api","describe","beforeEach","it","chat","registerChat","expect","body","title","toBe","expectedList","createdAt","updatedAt","list","get","toStrictEqual","user","registerUser","insert","insertUsers","user_id","id_chat","console","log"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAxB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,mBAAD,CAAnB;;AAEAI,QAAQ,CAAC,eAAD,EAAkB,MAAK;AAC3BC,EAAAA,UAAU,CAAC,YAAU;AACjB,UAAMH,QAAQ,EAAd;AACH,GAFS,CAAV;AAIAI,EAAAA,EAAE,CAAC,sBAAD,EAAwB,YAAW;AACjC,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,YAAJ,CAAiB,UAAjB,CAAnB;AACAC,IAAAA,MAAM,CAACF,IAAI,CAACG,IAAL,CAAUC,KAAX,CAAN,CAAwBC,IAAxB,CAA6B,UAA7B;AACH,GAHC,CAAF;AAKAN,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAU;AAC9B,UAAMO,YAAY,GAAG,MAAMV,GAAG,CAACK,YAAJ,CAAiB,UAAjB,CAA3B;AACA,WAAOK,YAAY,CAACH,IAAb,CAAkBI,SAAzB;AACA,WAAOD,YAAY,CAACH,IAAb,CAAkBK,SAAzB;AAEA,UAAMC,IAAI,GAAG,MAAMf,OAAO,CAACF,GAAD,CAAP,CAAakB,GAAb,CAAiB,YAAjB,CAAnB;AACA,WAAOD,IAAI,CAACN,IAAL,CAAU,CAAV,EAAaI,SAApB;AACA,WAAOE,IAAI,CAACN,IAAL,CAAU,CAAV,EAAaK,SAApB;AAEAN,IAAAA,MAAM,CAACO,IAAI,CAACN,IAAN,CAAN,CAAkBQ,aAAlB,CAAgC,CAACL,YAAY,CAACH,IAAd,CAAhC;AACH,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAW;AAE7D,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,YAAJ,CAAiB,UAAjB,CAAnB;AACA,UAAMW,IAAI,GAAG,MAAMhB,GAAG,CAACiB,YAAJ,CAAiB,OAAjB,EAA0B,oBAA1B,EAAgD,QAAhD,CAAnB;AAEA,UAAMC,MAAM,GAAG,MAAMlB,GAAG,CAACmB,WAAJ,CAAgB,CAACH,IAAI,CAACT,IAAL,CAAUa,OAAX,CAAhB,EAAqChB,IAAI,CAACG,IAAL,CAAUc,OAA/C,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACX,IAAnB;AACH,GAPC,CAAF;AASH,CA/BO,CAAR","sourcesContent":["const app = require('../../src/app')\r\nconst request = require('supertest')\r\nconst truncate = require('../utils/truncate')\r\nconst api = require('../utils/apiCalls')\r\n\r\ndescribe('Chat function', () =>{\r\n    beforeEach(async() =>{\r\n        await truncate()\r\n    })\r\n\r\n    it('should create a chat',async () =>{\r\n        const chat = await api.registerChat('conversa')\r\n        expect(chat.body.title).toBe('conversa')\r\n    })\r\n\r\n    it('should list chats', async() =>{\r\n        const expectedList = await api.registerChat('conversa')\r\n        delete expectedList.body.createdAt\r\n        delete expectedList.body.updatedAt\r\n\r\n        const list = await request(app).get('/listChats')\r\n        delete list.body[0].createdAt\r\n        delete list.body[0].updatedAt\r\n \r\n        expect(list.body).toStrictEqual([expectedList.body])\r\n    })\r\n\r\n    it('should insert users and list the inserted users', async () =>{\r\n\r\n        const chat = await api.registerChat('conversa')\r\n        const user = await api.registerUser('Paulo', 'paulo@mesquita.dev', '123123')\r\n\r\n        const insert = await api.insertUsers([user.body.user_id], chat.body.id_chat)\r\n        console.log(insert.body)\r\n    })\r\n\r\n})"]}