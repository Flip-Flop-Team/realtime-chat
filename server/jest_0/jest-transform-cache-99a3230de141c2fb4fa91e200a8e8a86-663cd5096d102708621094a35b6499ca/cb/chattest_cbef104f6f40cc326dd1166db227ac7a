7bc7215a34e58827be317ce1d649b2f6
const app = require('../../src/app');

const request = require('supertest');

const truncate = require('../utils/truncate');

const api = require('../utils/apiCalls');

describe('Chat function', () => {
  beforeEach(async () => {
    await truncate();
  });
  it('should create a chat', async () => {
    const chat = await api.registerChat('conversa');
    expect(chat.body.title).toBe('conversa');
  });
  it('should list chats', async () => {
    const expectedList = await api.registerChat('conversa');
    delete expectedList.body.createdAt;
    delete expectedList.body.updatedAt;
    const list = await request(app).get('/listChats');
    delete list.body[0].createdAt;
    delete list.body[0].updatedAt;
    expect(list.body).toStrictEqual([expectedList.body]);
  });
  it('should insert users and list the inserted users', async () => {
    const chat = await api.registerChat('conversa');
    const user = await api.registerUser('Paulo', 'paulo@mesquita.dev', '123123');
    const insert = await api.insertUsers([user.body.user_id], chat.body.id_chat);
    console.log(insert);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQudGVzdC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwicmVxdWVzdCIsInRydW5jYXRlIiwiYXBpIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiaXQiLCJjaGF0IiwicmVnaXN0ZXJDaGF0IiwiZXhwZWN0IiwiYm9keSIsInRpdGxlIiwidG9CZSIsImV4cGVjdGVkTGlzdCIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsImxpc3QiLCJnZXQiLCJ0b1N0cmljdEVxdWFsIiwidXNlciIsInJlZ2lzdGVyVXNlciIsImluc2VydCIsImluc2VydFVzZXJzIiwidXNlcl9pZCIsImlkX2NoYXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQW5COztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsTUFBTUUsUUFBUSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBQ0EsTUFBTUcsR0FBRyxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBbkI7O0FBRUFJLFFBQVEsQ0FBQyxlQUFELEVBQWtCLE1BQUs7QUFDM0JDLEVBQUFBLFVBQVUsQ0FBQyxZQUFVO0FBQ2pCLFVBQU1ILFFBQVEsRUFBZDtBQUNILEdBRlMsQ0FBVjtBQUlBSSxFQUFBQSxFQUFFLENBQUMsc0JBQUQsRUFBd0IsWUFBVztBQUNqQyxVQUFNQyxJQUFJLEdBQUcsTUFBTUosR0FBRyxDQUFDSyxZQUFKLENBQWlCLFVBQWpCLENBQW5CO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0YsSUFBSSxDQUFDRyxJQUFMLENBQVVDLEtBQVgsQ0FBTixDQUF3QkMsSUFBeEIsQ0FBNkIsVUFBN0I7QUFDSCxHQUhDLENBQUY7QUFLQU4sRUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQVU7QUFDOUIsVUFBTU8sWUFBWSxHQUFHLE1BQU1WLEdBQUcsQ0FBQ0ssWUFBSixDQUFpQixVQUFqQixDQUEzQjtBQUNBLFdBQU9LLFlBQVksQ0FBQ0gsSUFBYixDQUFrQkksU0FBekI7QUFDQSxXQUFPRCxZQUFZLENBQUNILElBQWIsQ0FBa0JLLFNBQXpCO0FBRUEsVUFBTUMsSUFBSSxHQUFHLE1BQU1mLE9BQU8sQ0FBQ0YsR0FBRCxDQUFQLENBQWFrQixHQUFiLENBQWlCLFlBQWpCLENBQW5CO0FBQ0EsV0FBT0QsSUFBSSxDQUFDTixJQUFMLENBQVUsQ0FBVixFQUFhSSxTQUFwQjtBQUNBLFdBQU9FLElBQUksQ0FBQ04sSUFBTCxDQUFVLENBQVYsRUFBYUssU0FBcEI7QUFFQU4sSUFBQUEsTUFBTSxDQUFDTyxJQUFJLENBQUNOLElBQU4sQ0FBTixDQUFrQlEsYUFBbEIsQ0FBZ0MsQ0FBQ0wsWUFBWSxDQUFDSCxJQUFkLENBQWhDO0FBQ0gsR0FWQyxDQUFGO0FBWUFKLEVBQUFBLEVBQUUsQ0FBQyxpREFBRCxFQUFvRCxZQUFXO0FBRTdELFVBQU1DLElBQUksR0FBRyxNQUFNSixHQUFHLENBQUNLLFlBQUosQ0FBaUIsVUFBakIsQ0FBbkI7QUFDQSxVQUFNVyxJQUFJLEdBQUcsTUFBTWhCLEdBQUcsQ0FBQ2lCLFlBQUosQ0FBaUIsT0FBakIsRUFBMEIsb0JBQTFCLEVBQWdELFFBQWhELENBQW5CO0FBRUEsVUFBTUMsTUFBTSxHQUFHLE1BQU1sQixHQUFHLENBQUNtQixXQUFKLENBQWdCLENBQUNILElBQUksQ0FBQ1QsSUFBTCxDQUFVYSxPQUFYLENBQWhCLEVBQXFDaEIsSUFBSSxDQUFDRyxJQUFMLENBQVVjLE9BQS9DLENBQXJCO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxNQUFaO0FBQ0gsR0FQQyxDQUFGO0FBU0gsQ0EvQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IHJlcXVpcmUoJy4uLy4uL3NyYy9hcHAnKVxyXG5jb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgnc3VwZXJ0ZXN0JylcclxuY29uc3QgdHJ1bmNhdGUgPSByZXF1aXJlKCcuLi91dGlscy90cnVuY2F0ZScpXHJcbmNvbnN0IGFwaSA9IHJlcXVpcmUoJy4uL3V0aWxzL2FwaUNhbGxzJylcclxuXHJcbmRlc2NyaWJlKCdDaGF0IGZ1bmN0aW9uJywgKCkgPT57XHJcbiAgICBiZWZvcmVFYWNoKGFzeW5jKCkgPT57XHJcbiAgICAgICAgYXdhaXQgdHJ1bmNhdGUoKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnc2hvdWxkIGNyZWF0ZSBhIGNoYXQnLGFzeW5jICgpID0+e1xyXG4gICAgICAgIGNvbnN0IGNoYXQgPSBhd2FpdCBhcGkucmVnaXN0ZXJDaGF0KCdjb252ZXJzYScpXHJcbiAgICAgICAgZXhwZWN0KGNoYXQuYm9keS50aXRsZSkudG9CZSgnY29udmVyc2EnKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnc2hvdWxkIGxpc3QgY2hhdHMnLCBhc3luYygpID0+e1xyXG4gICAgICAgIGNvbnN0IGV4cGVjdGVkTGlzdCA9IGF3YWl0IGFwaS5yZWdpc3RlckNoYXQoJ2NvbnZlcnNhJylcclxuICAgICAgICBkZWxldGUgZXhwZWN0ZWRMaXN0LmJvZHkuY3JlYXRlZEF0XHJcbiAgICAgICAgZGVsZXRlIGV4cGVjdGVkTGlzdC5ib2R5LnVwZGF0ZWRBdFxyXG5cclxuICAgICAgICBjb25zdCBsaXN0ID0gYXdhaXQgcmVxdWVzdChhcHApLmdldCgnL2xpc3RDaGF0cycpXHJcbiAgICAgICAgZGVsZXRlIGxpc3QuYm9keVswXS5jcmVhdGVkQXRcclxuICAgICAgICBkZWxldGUgbGlzdC5ib2R5WzBdLnVwZGF0ZWRBdFxyXG4gXHJcbiAgICAgICAgZXhwZWN0KGxpc3QuYm9keSkudG9TdHJpY3RFcXVhbChbZXhwZWN0ZWRMaXN0LmJvZHldKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnc2hvdWxkIGluc2VydCB1c2VycyBhbmQgbGlzdCB0aGUgaW5zZXJ0ZWQgdXNlcnMnLCBhc3luYyAoKSA9PntcclxuXHJcbiAgICAgICAgY29uc3QgY2hhdCA9IGF3YWl0IGFwaS5yZWdpc3RlckNoYXQoJ2NvbnZlcnNhJylcclxuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgYXBpLnJlZ2lzdGVyVXNlcignUGF1bG8nLCAncGF1bG9AbWVzcXVpdGEuZGV2JywgJzEyMzEyMycpXHJcblxyXG4gICAgICAgIGNvbnN0IGluc2VydCA9IGF3YWl0IGFwaS5pbnNlcnRVc2VycyhbdXNlci5ib2R5LnVzZXJfaWRdLCBjaGF0LmJvZHkuaWRfY2hhdClcclxuICAgICAgICBjb25zb2xlLmxvZyhpbnNlcnQpXHJcbiAgICB9KVxyXG5cclxufSkiXX0=