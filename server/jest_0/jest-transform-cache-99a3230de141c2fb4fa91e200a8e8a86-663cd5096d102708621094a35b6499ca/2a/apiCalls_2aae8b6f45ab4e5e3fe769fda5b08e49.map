{"version":3,"sources":["apiCalls.js"],"names":["request","require","app","module","exports","registerUser","username","email","password","post","send","then","response","catch","err","listUsers","get","getUser","id","deleteUser","delete","updateUser","info","put","loginUser","registerChat","title","listChats","insertUsers","users","chat","listChatUsers","deleteChat","deleteChatUsers","sendMenssage","content","fk_id_user","fk_id_chat","getMessages"],"mappings":"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","sourcesContent":["const request = require('supertest')\r\nconst app = require('../../src/app')\r\n\r\nmodule.exports = {\r\n    //###User Controller###\r\n    registerUser: async(username, email, password) => {\r\n        return await request(app).post('/registerUser').send({username, email, password}).then(response => response).catch(err => err)\r\n    },\r\n    listUsers: async() => {\r\n        return await request(app).get('/listUsers').then(response => response).catch(err => err)\r\n    },\r\n    getUser: async(id) => {\r\n        return await request(app).get(`/getUser/${id}`).then(response => response).catch(err => err)\r\n    },\r\n    deleteUser: async(id) => {\r\n        return await request(app).delete(`/deleteUser/${id}`).then(response => response).catch(err => err)\r\n    },\r\n    updateUser: async(id, info) => {\r\n        return await request(app).put(`/updateUser/${id}`).send(info).then(response => response).catch(err => err)\r\n    },\r\n\r\n    //###Session Controller###\r\n    loginUser: async(email, password) => {\r\n        return await request(app).post('/loginUser').send({email, password}).then(response => response).catch(err => err)\r\n    },\r\n\r\n    //###Chat Controller###\r\n    registerChat: async(title) =>{\r\n        return await request(app).post('/registerChat').send({title}).then(response => response).catch(err => err)\r\n    },\r\n    listChats : async() =>{\r\n        return await request(app).get('/listChats').then(response => response).catch(err => err)\r\n    },\r\n    insertUsers: async(users, chat) =>{\r\n        return await request(app).post('/insertUsers').send({users, chat}).then(response => response).catch(err => err)\r\n    },\r\n    listChatUsers: async(id) =>{\r\n        return await request(app).get(`/listChatUsers/${id}`).then(response => response).catch(err => err)\r\n    },\r\n    deleteChat: async(id) =>{\r\n        return await request(app).put(`/deleteChat/${id}`).then(response => response).catch(err => err)\r\n    },\r\n    deleteChatUsers: async(users, id) =>{\r\n        return await request(app).put(`/deleteChatUsers`).send({users, id}).then(response => response).catch(err => err)\r\n    },\r\n\r\n    //Message Controller\r\n    sendMenssage: async(content, fk_id_user, fk_id_chat) => {\r\n        return await request(app).post('/sendMenssage').send({content, fk_id_chat, fk_id_user}).then(response => response).catch(err => err)\r\n    },\r\n    getMessages: async(id) => {\r\n        return await request(app).get(`/getMessages/${id}`).then(response => response)\r\n            .then(response => response)\r\n            .catch(err => err)\r\n    },\r\n\r\n}"]}